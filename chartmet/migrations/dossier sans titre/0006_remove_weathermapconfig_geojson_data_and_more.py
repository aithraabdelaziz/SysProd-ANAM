# Generated by Django 5.1.8 on 2025-05-07 23:18

import chartmet.models
import colorfield.fields
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('chartmet', '0005_alter_weathericon_options_and_more'),
        ('forecast', '0010_remove_observation_forecast_ptr_delete_station_and_more'),
        ('observation', '0004_alter_station_geom'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='weathermapconfig',
            name='geojson_data',
        ),
        migrations.RemoveField(
            model_name='weathermapconfig',
            name='shapefile',
        ),
        migrations.RemoveField(
            model_name='weatherparameterstyle',
            name='config',
        ),
        migrations.CreateModel(
            name='MapConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zip_file', models.FileField(help_text='Fichier ZIP contenant le shapefile.', upload_to=chartmet.models.shapefile_upload_path)),
                ('facecolor', colorfield.fields.ColorField(default='#FFFFFF', help_text='Couleur de fond général de la carte.', image_field=None, max_length=25, samples=None)),
                ('color_shape', colorfield.fields.ColorField(default='#bef9ff', help_text='Couleur de remplissage des zones.', image_field=None, max_length=25, samples=None)),
                ('intern_edgecolor', colorfield.fields.ColorField(default='#808080', help_text='Couleur des lignes internes.', image_field=None, max_length=25, samples=None)),
                ('intern_linewidth', models.FloatField(default=0.3, help_text='Épaisseur des lignes internes (0.1 à 5.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(5.0)])),
                ('border_edgecolor', colorfield.fields.ColorField(default='#000000', help_text='Couleur du contour extérieur.', image_field=None, max_length=25, samples=None)),
                ('border_linewidth', models.FloatField(default=0.8, help_text='Épaisseur du contour extérieur (0.1 à 10.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)])),
                ('min_dist', models.FloatField(default=0.5, help_text='Distance minimale entre étiquettes (0 à 1).', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('titre_carte', models.CharField(default="Carte d'observation", max_length=255)),
                ('titre_date', models.BooleanField(default=True, help_text='Afficher la date sous le titre.')),
                ('titre_fontsize', models.PositiveIntegerField(default=14, help_text='Taille de police du titre (8 à 48).', validators=[django.core.validators.MinValueValidator(8), django.core.validators.MaxValueValidator(48)])),
                ('titre_pad', models.PositiveIntegerField(default=20, help_text='Marge verticale sous le titre (0 à 100 px).', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('titre_backgroundcolor', colorfield.fields.ColorField(default='#FFFFFF', help_text='Couleur de fond du titre.', image_field=None, max_length=25, samples=None)),
                ('type_map', models.CharField(choices=[('forecast', 'Prévision'), ('observation', 'Observation')], max_length=20, unique=True)),
                ('active', models.BooleanField(default=False, help_text='Activer cette configuration.')),
                ('stations', models.ManyToManyField(blank=True, help_text="Stations utilisées pour les cartes d'observation.", related_name='map_configurations', to='observation.station')),
                ('zones', models.ManyToManyField(blank=True, help_text='Zones utilisées pour les cartes de type prévision.', related_name='map_configurations', to='forecast.zone')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.DeleteModel(
            name='WeatherIcon',
        ),
        migrations.DeleteModel(
            name='WeatherMapConfig',
        ),
        migrations.DeleteModel(
            name='WeatherParameterStyle',
        ),
    ]
